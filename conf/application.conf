# Copyright 2017 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

appName="file-upload-frontend"
play.modules.enabled += "com.kenshoo.play.metrics.PlayModule"
play.http.requestHandler = "play.api.http.GlobalSettingsHttpRequestHandler"
application.router=prod.Routes

play.application.loader = uk.gov.hmrc.fileupload.ApplicationLoader

play.crypto.secret="LvK8smzDPV07QBm0mAuP`OZfjM`^PT6DYD_9IQp^rQ7^H<?QHcHi;my>aSsh8Xjh"

play.filters.csrf.header.bypassHeaders {
  X-Requested-With = "*"
  Csrf-Token = "nocheck"
}

play.http.parser.maxDiskBuffer=100MB

controllers {
  # 300 is the default, you may need to change this according to your needs
  confidenceLevel = 300

  com.kenshoo.play.metrics.MetricsController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }
  redirection.allowedHosts = "gov.uk, localhost"
}

auditing {
  enabled=true
  traceRequests=true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

aws {
  s3.bucket.upload.transient = file-upload-transient
  s3.bucket.upload.transient = ${?S3_BUCKET_TRANSIENT}
  s3.bucket.upload.quarantine = file-upload-quarantine
  s3.bucket.upload.quarantine = ${?S3_BUCKET_QUARANTINE}
  s3.bucket.env-subdir = local
  access.key.id = "ENTER YOUR KEY"
  access.key.id = ${?AWS_KEY}
  secret.access.key = "ENTER YOUR SECRET KEY"
  secret.access.key = ${?AWS_SECRET}
  service_endpoint = ${?AWS_ENDPOINT}
}

proxy.proxyRequiredForThisEnvironment = false
proxy.host = "localhost"
proxy.port = 3128
proxy.username = fupload1
proxy.password = password1

akka {
  logger-startup-timeout = 30s
}

Dev {
  mongodb {
    uri = "mongodb://localhost:27017/file-upload-quarantine"
  }
  # ClamAv scanning configuration
  clam.antivirus {
    enableScanning = true
    runStub = true
    chunkSize = 32768

    host = avscan
    port = 3310

    timeout = 5000
    threadPoolSize = 20
    maxLength = 25690112 // 24.5Mb
  }

  microservice {
    services {
      file-upload-backend {
        host = localhost
        port = 8898
      }
    }
    metrics {
      graphite {
        host = graphite
        port = 2003
        prefix = play.${appName}.
        enabled = true
      }
    }
  }
}

Prod {
  mongodb {
    uri = "mongodb://public-filestore-app-db-1:27017,public-filestore-app-db-2:27017,public-filestore-app-db-3:27017/file-upload-quarantine"
  }

  microservice {
    services {
      file-upload-backend {
        host = localhost
        port = 8898
      }
    }
    metrics {
      graphite {
        host = graphite
        port = 2003
        prefix = play.${appName}.
        enabled = true
      }
    }
  }

  # ClamAv scanning configuration
  clam.antivirus {
    enableScanning = true
    runStub = false
    chunkSize = 32768

    host = avscan
    port = 3310

    timeout = 30000
    threadPoolSize = 20
    maxLength = 25690112 // 24.5Mb
  }
}


Test {
  mongodb {
    uri = "mongodb://localhost:27017/file-upload-quarantine"
  }

  microservice {
    services {
      file-upload-backend {
        host = localhost
        port = 8080
      }
    }
  }

  # ClamAv scanning configuration
  clam.antivirus {
    enableScanning = false
    runStub = false
    chunkSize = 32768

    host = avscan
    port = 3310

    timeout = 5000
    threadPoolSize = 20
    maxLength = 25690112 // 24.5Mb
  }

}
