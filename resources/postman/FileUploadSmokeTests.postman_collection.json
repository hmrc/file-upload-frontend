{
	"variables": [],
	"info": {
		"name": "File Upload Smoke Tests",
		"_postman_id": "ea2dc76b-10a2-bef2-9f7c-d3fc7db5deab",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Create envelope (test-only)",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 201\"] = responseCode.code === 201;",
							"tests[\"Status code name has Created\"] = responseCode.name.has(\"Created\");",
							"",
							"var envelopeId = JSON.parse(responseBody).envelopeId",
							"",
							"tests[\"Response body contains Envelope ID\"] = envelopeId !== null",
							"postman.setGlobalVariable(\"envelopeId\", envelopeId);"
						]
					}
				}
			],
			"request": {
				"url": "{{fe-url}}/file-upload/test-only/create-envelope",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Retrieve Envelope Information (test-only): Status = OPEN",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Check envelope ID returned\"] = jsonData.id === postman.getGlobalVariable(\"envelopeId\");",
							"",
							"tests[\"Check Status is OPEN\"] = jsonData.status === \"OPEN\"",
							""
						]
					}
				}
			],
			"request": {
				"url": "{{fe-url}}/file-upload/test-only/envelopes/{{envelopeId}} ",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": [
				{
					"id": "91672241-f4ef-40f4-ab9f-b2f54274d7a3",
					"name": "Success",
					"originalRequest": {
						"url": "{{url}}/file-upload/envelopes/{{locationHeader}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "javascript",
					"_postman_previewtype": "html",
					"header": [
						{
							"name": "Content-Length",
							"key": "Content-Length",
							"value": "464",
							"description": "The length of the response body in octets (8-bit bytes)"
						},
						{
							"name": "Content-Type",
							"key": "Content-Type",
							"value": "application/json; charset=utf-8",
							"description": "The mime type of this content"
						}
					],
					"cookie": [],
					"body": "{\"_id\":\"0e17bd50-9993-45a3-9533-2a71f7a278a7\",\"constraints\":{\"contentTypes\":[\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\"application/vnd.oasis.opendocument.spreadsheet\"],\"maxItems\":100,\"maxSize\":\"12GB\",\"maxSizePerItem\":\"10MB\"},\"callbackUrl\":\"http://absolute.callback.url\",\"expiryDate\":1467893730000,\"metadata\":{\"anything\":\"the caller wants to add to the envelope\"}}"
				}
			]
		},
		{
			"name": "Upload File (front-end)",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 201\"] = responseCode.code === 201;",
							"tests[\"Status code name is Created\"] = responseCode.name.has(\"Created\");"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var timestamp = Date.now()",
							"postman.setGlobalVariable(\"fileId\", timestamp);"
						]
					}
				}
			],
			"request": {
				"url": "{{fe-url}}/file-upload/upload/envelopes/{{envelopeId}}/files/{{fileId}}",
				"method": "POST",
				"header": [
					{
						"key": "X-Requested-With",
						"value": "Craig",
						"description": ""
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "{{fileId}}",
							"type": "file",
							"src": "1473167513.pdf",
							"value": ""
						},
						{
							"key": "foo",
							"value": "1",
							"type": "text"
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Upload File With Redirection (front-end)",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 201\"] = responseCode.code === 201;",
							"tests[\"Status code name is Created\"] = responseCode.name.has(\"Created\");"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var timestamp = Date.now()",
							"postman.setGlobalVariable(\"fileId\", timestamp);"
						]
					}
				}
			],
			"request": {
				"url": {
					"raw": "{{fe-url}}/file-upload/upload/envelopes/{{envelopeId}}/files/{{fileId}}?redirect-success-url=https://www.tax.service.gov.uk/estimate-paye-take-home-pay/&redirect-error-url=https://www.gov.uk/help",
					"protocol": "{{fe-url}}/file-upload/upload/envelopes/{{envelopeId}}/files/{{fileId}}?redirect-success-url=https",
					"host": [
						"www",
						"tax",
						"service",
						"gov",
						"uk"
					],
					"path": [
						"estimate-paye-take-home-pay",
						"&redirect-error-url=https:",
						"",
						"www.gov.uk",
						"help"
					],
					"query": [
						{
							"key": "redirect-success-url",
							"value": "https://www.tax.service.gov.uk/estimate-paye-take-home-pay/",
							"equals": true,
							"description": ""
						},
						{
							"key": "redirect-error-url",
							"value": "https://www.gov.uk/help",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "POST",
				"header": [
					{
						"key": "X-Requested-With",
						"value": "Craig",
						"description": ""
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "{{fileId}}",
							"type": "file",
							"src": "FileUploadSmokeTests.postman_collection.json"
						},
						{
							"key": "foo",
							"value": "1",
							"type": "text"
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Retrieve Envelope details (test-only): File added and OPEN",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Check envelope ID returned\"] = jsonData.id === postman.getGlobalVariable(\"envelopeId\");",
							"",
							"tests[\"Check Env Status is OPEN\"] = jsonData.status === \"OPEN\"",
							"tests[\"Check fileId is present\"] = jsonData.files[0].id === postman.getGlobalVariable(\"fileId\");",
							"",
							"",
							"",
							"tests[\"Check File Status is QUARANTINED\"] = jsonData.files[0].status ===\"QUARANTINED\"",
							"",
							"var callbackUrl = jsonData.files[0].href",
							"postman.setGlobalVariable(\"callbackUrl\", callbackUrl)",
							"var expectedCallbackUrl = \"/file-upload/envelopes/\" + postman.getGlobalVariable(\"envelopeId\")+ \"/files/\" + postman.getGlobalVariable(\"fileId\") + \"/content\"",
							"",
							"tests[\"Check callback url correct\"] = callbackUrl === expectedCallbackUrl",
							""
						]
					}
				}
			],
			"request": {
				"url": "{{fe-url}}/file-upload/test-only/envelopes/{{envelopeId}} ",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": [
				{
					"id": "ae284586-a346-41b5-9662-e6aff3ee7bc6",
					"name": "Success",
					"originalRequest": {
						"url": "{{url}}/file-upload/envelopes/{{locationHeader}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "javascript",
					"_postman_previewtype": "html",
					"header": [
						{
							"name": "Content-Length",
							"key": "Content-Length",
							"value": "464",
							"description": "The length of the response body in octets (8-bit bytes)"
						},
						{
							"name": "Content-Type",
							"key": "Content-Type",
							"value": "application/json; charset=utf-8",
							"description": "The mime type of this content"
						}
					],
					"cookie": [],
					"body": "{\"_id\":\"0e17bd50-9993-45a3-9533-2a71f7a278a7\",\"constraints\":{\"contentTypes\":[\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\"application/vnd.oasis.opendocument.spreadsheet\"],\"maxItems\":100,\"maxSize\":\"12GB\",\"maxSizePerItem\":\"10MB\"},\"callbackUrl\":\"http://absolute.callback.url\",\"expiryDate\":1467893730000,\"metadata\":{\"anything\":\"the caller wants to add to the envelope\"}}"
				}
			]
		},
		{
			"name": "Submit Routing request (test-only)",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 201\"] = responseCode.code === 201;",
							"tests[\"Status code name is Created\"] = responseCode.name.has(\"Created\");"
						]
					}
				}
			],
			"request": {
				"url": "{{fe-url}}./file-upload/test-only/routing/requests",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \"envelopeId\": \"{{envelopeId}}\", \"application\" : \"application:ABCD/1.2.33\", \"destination\": \"DMS\" }"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Retrieve Envelope details (test-only): Envelope Sealed",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Check envelope ID returned\"] = jsonData.id === postman.getGlobalVariable(\"envelopeId\");",
							"",
							"tests[\"Check Env Status is CLOSED\"] = jsonData.status === \"CLOSED\"",
							"tests[\"Check Destination is DMS\"] = jsonData.destination === \"DMS\""
						]
					}
				}
			],
			"request": {
				"url": "{{fe-url}}/file-upload/test-only/envelopes/{{envelopeId}} ",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": [
				{
					"id": "068b64d8-c1df-43b5-bf06-a68606bdf3e7",
					"name": "Success",
					"originalRequest": {
						"url": "{{url}}/file-upload/envelopes/{{locationHeader}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "javascript",
					"_postman_previewtype": "html",
					"header": [
						{
							"name": "Content-Length",
							"key": "Content-Length",
							"value": "464",
							"description": "The length of the response body in octets (8-bit bytes)"
						},
						{
							"name": "Content-Type",
							"key": "Content-Type",
							"value": "application/json; charset=utf-8",
							"description": "The mime type of this content"
						}
					],
					"cookie": [],
					"body": "{\"_id\":\"0e17bd50-9993-45a3-9533-2a71f7a278a7\",\"constraints\":{\"contentTypes\":[\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\"application/vnd.oasis.opendocument.spreadsheet\"],\"maxItems\":100,\"maxSize\":\"12GB\",\"maxSizePerItem\":\"10MB\"},\"callbackUrl\":\"http://absolute.callback.url\",\"expiryDate\":1467893730000,\"metadata\":{\"anything\":\"the caller wants to add to the envelope\"}}"
				}
			]
		},
		{
			"name": "Upload File (front-end): Check fails as env routed",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 423\"] = responseCode.code === 423;",
							"tests[\"Status code name is Locked\"] = responseCode.name.has(\"Locked\");",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Check error message syntax\"] = jsonData.error.msg === \"Routing request already received for envelope: \" + postman.getGlobalVariable(\"envelopeId\")",
							"",
							"",
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var timestamp = Date.now()",
							"postman.setGlobalVariable(\"fileId2\", timestamp);"
						]
					}
				}
			],
			"request": {
				"url": "{{fe-url}}/file-upload/upload/envelopes/{{envelopeId}}/files/{{fileId2}}",
				"method": "POST",
				"header": [
					{
						"key": "X-Requested-With",
						"value": "Craig",
						"description": ""
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "{{fileId}}",
							"type": "file",
							"src": "team_sandcastle.xml",
							"value": ""
						},
						{
							"key": "foo",
							"value": "1",
							"type": "text"
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "List Envelopes (test-only)",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var envelopeId = postman.getGlobalVariable(\"envelopeId\");",
							"tests[\"Check envelope ID present\"] = responseBody.has(envelopeId);",
							"",
							"var fileId = postman.getGlobalVariable(\"fileId\");",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"var noOfEnvelopes = jsonData._embedded.envelopes.length;",
							"var x;",
							"for(x=0; x<noOfEnvelopes; x++) {",
							"    if (jsonData._embedded.envelopes[x].id === envelopeId) {",
							"        break;",
							"    }",
							"}",
							"",
							"tests[\"Check envelopeId is present is available\"] = jsonData._embedded.envelopes[x].id === envelopeId",
							"tests[\"Check Destination is DMS\"] = jsonData._embedded.envelopes[x].destination === \"DMS\"",
							"tests[\"Check file size is not 0\"] = jsonData._embedded.envelopes[x]._embedded.files[0].length !== 0",
							"",
							"var callbackUrl = jsonData._embedded.envelopes[x]._links.package.href;",
							"tests[\"Validate File Transfer Package callbackUrl\"] = callbackUrl === \"/file-transfer/envelopes/\" + envelopeId",
							"postman.setGlobalVariable(\"callbackUrl\", callbackUrl);",
							""
						]
					}
				}
			],
			"request": {
				"url": "{{fe-url}}/file-upload/test-only/transfer/get-envelopes",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Download Envelope Contents (test-only)",
			"request": {
				"url": "{{fe-url}}/file-upload/test-only/transfer/download-envelope/{{envelopeId}}",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Download Specific File (test-only)",
			"request": {
				"url": "{{fe-url}}/file-upload/test-only/download-file/envelopes/{{envelopeId}}/files/{{fileId}}/content",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		}
	]
}